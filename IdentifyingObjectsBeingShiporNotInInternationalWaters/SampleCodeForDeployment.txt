import streamlit as st
from tensorflow.keras.models import load_model
import numpy as np
from PIL import Image

model = load_model('model.h5')

class_labels = ["Not a ship", "Ship"]

def predict(image):
    # Load and preprocess the image
    img = Image.open(image).resize((80, 80))
    img_array = np.array(img) / 255.0
    img_array = np.expand_dims(img_array, axis=0)

    # Make a prediction
    prediction = model.predict(img_array)
    predicted_class = np.argmax(prediction)

    # Return the predicted class label
    return class_labels[predicted_class]

def main():
    # Set the title and page icon
    st.set_page_config(page_title='Identifying Ships through Satellite Images', page_icon=':ship:')

    # Set the app header
    st.title('Identifying Ships through Satellite Images')

    # Upload an image for prediction
    uploaded_file = st.file_uploader('Upload an image', type=['jpg', 'jpeg', 'png'])

    if uploaded_file is not None:
        # Display the uploaded image
        img = Image.open(uploaded_file)
        st.image(img, caption='Uploaded Image', use_column_width=True)

        # Make a prediction and display the result
        prediction = predict(uploaded_file)
        st.write('Prediction:', prediction)

if __name__ == '__main__':
    main()
